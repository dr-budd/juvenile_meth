data_all_amplicon$ylabs[grep("FT.*", data_all_amplicon$ylabs)],
data_all_amplicon$ylabs[grep("HT.*", data_all_amplicon$ylabs)],
data_all_amplicon$ylabs[grep("Female.*", data_all_amplicon$ylabs)],
data_all_amplicon$ylabs[grep("Male.*", data_all_amplicon$ylabs)])
data_all_amplicon$ylabs <- factor(data_all_amplicon$ylabs, levels=unique(ordered))
## make x labs vector (to relabel -1000 as 'All')
xlabs <- c("All",
levels(factor(data_all_amplicon$CpG_site))[levels(factor(data_all_amplicon$CpG_site))!="-1000"])
## make plot
HM<-ggplot(data = data_all_amplicon,
aes(x=as.character(CpG_site),
y=ylabs,
fill=mean_perc_meth)) +
geom_tile()+
ggtitle(gsub("_", " ", a))+
xlab("CpG position (bp)")+
ylab("Treatment")+
scale_x_discrete(labels = xlabs)+
theme(axis.text.x = element_text(size=9, angle = 45, hjust = 1),
axis.text.y = element_text(size=9),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10),
strip.text.y = element_text(size = 9, margin = margin(0, 0, 0, 0, "cm")),
panel.border = element_blank(),
strip.background = element_blank(),
plot.margin = unit(c(0.1,0.2,0.1,0.2), "cm"),
legend.margin = margin(0,0,0,0),
legend.title = element_text(size = 10),
legend.key.width = unit(0.5, "line"),
legend.text = element_text(size=8),
plot.title = element_text(size=11, face = "bold.italic", hjust=0))+
theme(legend.position = "none")+ #remove legend
geom_vline(xintercept=1.5, colour="grey10", size=0.3)+
facet_grid(rows=vars(Month), scales = "free", space = "free_y")
HM_l <- HM + scale_fill_viridis(direction = -1, discrete=FALSE, option="G",
limits=c(0, 110),
name = "DNAm\n(%)")
ggsave(plot=HM_l, filename=paste0("out/", name_temp, "_l.pdf"),
device="pdf", width=16, height=11, units=c("cm"))
}
## OTHER STATISTICS ----
## create mean +/- SD, min, max table ----
data_all_msd = data_all %>%
group_by(Amplicon, Month_Treatment, Month, Treatment) %>%
summarise(mean_RFP = mean(prop_meth, na.rm=TRUE),
sd_RFP = sd(prop_meth, na.rm=TRUE),
min_RFP = min(prop_meth, na.rm=TRUE),
max_RFP = max(prop_meth, na.rm=TRUE)) %>%
mutate('Mean (+/- SD)' = paste0(round(mean_RFP*100, 2),
" (", SD = round(sd_RFP*100, 2), ")"),
Min. = round(min_RFP*100, 2),
Max. = round(max_RFP*100, 2),
Amplicon = gsub("_", " ", Amplicon)) %>%
ungroup(.) %>%
select(-c(mean_RFP, min_RFP, max_RFP, sd_RFP, Month_Treatment)) %>%
rename('Fish age' = Month)
## export it
write.csv(data_all_msd, "out/c3_meth_summary_table.csv", row.names=FALSE)
## create glht table ----
glht_table<-NULL
for (a in levels(data_all_sum$Amplicon)) {
data_all_amplicon <- filter(data_all_sum, Amplicon==a)
data_temp <- filter(data_all, Amplicon==a)
data_temp$Month_Treatment <- as.factor(data_temp$Month_Treatment)
data_all_amplicon$CpG_site <- factor(data_all_amplicon$CpG_site)
print(a)
## anova
anova_temp <- aov(logitMeth ~ Month_Treatment, data = data_temp)
glht_temp <- summary(glht(anova_temp, linfct = mcp(Month_Treatment = "Tukey")),
test = adjusted("bonferroni"))
cld<-cld(glht_temp)
## table
glht_temp2<-tidy(summary(glht_temp))
glht_temp3<-cbind(a, glht_temp2)
glht_table<-rbind(glht_table, glht_temp3)
}
## edit glht table
glht_table_edit <- glht_table %>%
mutate(contrast = gsub("T2434", "FT", contrast) %>%
gsub("T24", "LT", .) %>%
gsub("T34", "HT", .) %>%
gsub("T29", "Control", .) %>%
gsub("_", " mph ", .) %>%
gsub("Female.Wild", "Adult Female", .) %>%
gsub("Male.Wild", "Adult Male", .)) %>%
mutate(a = gsub("_", " ", a),
estimate = round(estimate, digits = 3),
std.error = round(std.error, digits = 3),
statistic = round(statistic, digits = 3),
adj.p.value = round(adj.p.value, digits = 3)) %>%
select(-c(term, null.value)) %>%
mutate('Sig. Code' = ifelse(adj.p.value <=0.001, "***",
ifelse(adj.p.value<=0.01, "**",
ifelse(adj.p.value <=0.05, "*",
ifelse(adj.p.value <=0.1, ".",
" "))))) %>%
rename(Comparison = contrast, Amplicon = a,
Estimate = estimate, 'Std. error' = std.error,
Statistic = statistic, 'Adj. p-value' = adj.p.value)
## export glht table
write.csv(glht_table_edit, "out/c3_glht_table.csv", row.names=FALSE)
## within gene comparisons (inc. exon t-tests) ----
data_all_less <- data_all %>%
## remove adults (no 3' exon data)
filter(., Month != "Adult") %>%
## convert to percentage
mutate(perc_meth = prop_meth*100)
for (i in levels(factor(data_all_less$Amplicon))) {
# print(paste0("data_", i))
assign(paste0("data_", i), filter(data_all_less, Amplicon == i))
}
max(data_foxl2_P$perc_meth, na.rm=TRUE)
max(data_foxl2_E1pt1$perc_meth, na.rm=TRUE)
max(data_foxl2_E1pt2$perc_meth, na.rm=TRUE)
mean(data_dmrt1_P$perc_meth, na.rm=TRUE)
mean(data_dmrt1_PE1$perc_meth, na.rm=TRUE)
mean(data_dmrt1_E5$perc_meth, na.rm=TRUE)
mean(data_amh_E7$perc_meth, na.rm=TRUE)
mean(data_cyp19a1a_E8$perc_meth, na.rm=TRUE)
mean(data_dmrt1_E5$perc_meth, na.rm=TRUE)
amh<-t.test(data_amh_PE1$perc_meth, data_amh_E7$perc_meth, var.equal=FALSE)
cyp19a1a<-t.test(data_cyp19a1a_PE1$perc_meth, data_cyp19a1a_E8$perc_meth, var.equal=FALSE)
dmrt1<-t.test(data_dmrt1_PE1$perc_meth, data_dmrt1_E5$perc_meth, var.equal=FALSE)
paste0("amh: t(", round(amh$parameter[[1]], digits=2),
") = ", round(amh$statistic[[1]], digits=2),
", p = ", ifelse(amh$p.value < 0.001,
"<0.001", round(amh$p.value, digits=2)))
paste0("cyp19a1a: t(", round(cyp19a1a$parameter[[1]], digits=2),
") = ", round(cyp19a1a$statistic[[1]], digits=2),
", p = ", ifelse(cyp19a1a$p.value < 0.001,
"<0.001", round(cyp19a1a$p.value, digits=2)))
paste0("dmrt1: t(", round(dmrt1$parameter[[1]], digits=2),
") = ", round(dmrt1$statistic[[1]], digits=2),
", p = ", ifelse(dmrt1$p.value < 0.001,
"<0.001", round(dmrt1$p.value, digits=2)))
## end script
## set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(multcomp)
library(data.table) ## setDT
library(viridis)
library(car)
library(tidyverse)
## IMPORT AND FORMAT DATA ----
## import data
length_weight_data_unmod <- read.csv("in/c3_length_weight_data_all.csv")
## format it
length_weight_data <- length_weight_data_unmod %>%
mutate(Treatment = gsub("F", "FT", Treatment) %>%
gsub("24", "LT", .) %>%
gsub("34", "HT", .) %>%
gsub("29", "Control", .)) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT")),
Months = as.factor(Months)) %>%
mutate(Month = paste0(Months, " mph")) %>%
mutate(Month = factor(Month, levels=c("12 mph", "9 mph", "6 mph")))
## STATISTICS ----
## se function
se <- function(x) sqrt(var(x)/length(x))
## calculate mean SD/SE
length_weight_data_msdse = length_weight_data %>%
group_by(Months, Treatment) %>%
summarise(mean_len = mean(Length, na.rm=T),
sd_len = sd(Length, na.rm=T),
mean_wei = mean(Weight, na.rm=T),
sd_wei = sd(Weight, na.rm=T),
mean_len = mean(Length, na.rm=T),
se_len = se(Length),
mean_wei = mean(Weight, na.rm=T),
se_wei = se(Weight)) %>%
ungroup(.)%>%
# mutate(prev_mean_wei = c(1, 1, 1, 1, length_weight_data_msdse$mean_wei[1:8])) %>%
mutate(prev_mean_wei = c(0.01, 0.01, 0.01, 0.01, pull(., var=mean_wei)[1:8])) %>%
mutate(days = c(rep(180, 4), rep(90, 8))) %>%
mutate(SGR = (log(mean_wei) - log(prev_mean_wei))/days*100)
## make a nicely formatted supplementary table
## (did not end up using length, weight is a more meaningful measure)
w_supp_table <- length_weight_data_msdse %>%
mutate("Mean length (cm)" = round(mean_len, 2)) %>%
mutate("SD length" = round(sd_len, 2)) %>%
mutate("SE length" = round(se_len, 2)) %>%
mutate("Mean weight (g)" = round(mean_wei, 2)) %>%
mutate("SD weight" = round(sd_wei, 2)) %>%
mutate("SE weight" = round(se_wei, 2)) %>%
# mutate("SGR (%)" = round(SGR, 2)) %>%
select(-c("mean_len", "sd_len", "se_len",
"mean_wei", "sd_wei", "se_wei",
"prev_mean_wei", "SGR", "days"))
## export it
write.csv(w_supp_table, "out/c3_w_supp_table_both.csv", row.names = FALSE)
## run among treatment comparisons ----
## create empty df
cld_table_weight_369 <- NULL
## create tukey letters df
for (i in levels(length_weight_data$Month)) {
temp_data<-filter(length_weight_data, Month==i)
temp_name<-paste("Weight", i, "Months", sep="_")
print(temp_name)
temp_aov_w <- aov(Weight ~ Treatment, data = temp_data)
temp_glht_w<-(glht(temp_aov_w, linfct = mcp(Treatment = "Tukey")))
cld_w<-cld(temp_glht_w)
cld_table_w_369<-as.data.frame(cld_w$mcletters$Letters, rownames=NULL)
cld_table_w_369<-setDT(cld_table_w_369, keep.rownames = TRUE)[]
cld_table_w_369$Month <- paste(i)
names(cld_table_w_369)[names(cld_table_w_369)=="rn"]<-"Treatment"
names(cld_table_w_369)[names(cld_table_w_369)=="cld$mcletters$Letters"]<-"Letters"
letters_table_w_369 <- cld_table_w_369[match(paste(temp_data$Treatment),
paste(cld_table_w_369$Treatment)),]
ylabelpos <- NULL
for (j in temp_data$Treatment) {
subsetis <- (temp_data[which(temp_data$Treatment==j),])
ylabelpos <- c(ylabelpos,max(subsetis$Weight))
}
letters_table_w_369$ylabelpos <- ylabelpos*1.2
cld_table_weight_369<-rbind(cld_table_weight_369, letters_table_w_369)
}
## edit table
cld_table_weight_369_unique<-(unique(cld_table_weight_369)) %>%
rename(weight_label_letter = `cld_w$mcletters$Letters`,
weight_ylabelpos = ylabelpos) %>%
mutate(Months = gsub(" mph", "", Month))
## add cld to main df
length_weight_data_msdse_tukey <- length_weight_data_msdse %>%
left_join(., cld_table_weight_369_unique, by = c("Months", "Treatment")) %>%
mutate(Months = factor(Months, levels=c("6", "9", "12"))) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT"))) %>%
## order = control, LT, FT, HT
mutate(weight_ylabelpos2 = c(c(200, 133, 100, 166), c(433, 466, 400, 500), c(566, 600, 633, 666))) %>%
mutate(weight_xlabelpos = c(rep(0.8, 4), rep(1.6, 4), rep(3.2, 4)))
## CREATE PLOT ----
## edit viridis because yellow is hard to see
viridis_colours <- viridis(n = 4)
viridis_colours_darkyellow <- gsub("#FDE725FF", "darkgoldenrod2", viridis_colours)
viridis_colours_darkyellow
## plot weight with tukey letters
line_weight<-ggplot(length_weight_data_msdse_tukey,
aes(factor(Months), mean_wei, colour=Treatment))+
geom_line(aes(group=Treatment))+
geom_point()+
scale_colour_manual(values=viridis_colours_darkyellow)+
geom_text(aes(weight_xlabelpos, weight_ylabelpos2,
label = weight_label_letter),
fontface = "bold", size = 4,
show.legend = FALSE)+
geom_errorbar(aes(ymin=mean_wei-se_wei, ymax=mean_wei+se_wei, group=Treatment),
width=0.05)+
theme_bw()+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"),
strip.background = element_blank())+
ylab("Weight (g)") +
xlab("Time (mph)")
line_weight
## save plot
ggsave("out/figure_line_weight.jpeg", line_weight, width=210*0.66, height=297*0.33, units="mm", device="jpeg")
## LENGTH STATS ----
## create empty df
cld_table_length_369 <- NULL
## create tukey letters df
for (i in levels(length_weight_data$Month)) {
temp_data<-filter(length_weight_data, Month==i)
temp_name<-paste("Length", i, "Months", sep="_")
print(temp_name)
temp_aov_w <- aov(Length ~ Treatment, data = temp_data)
temp_glht_w<-(glht(temp_aov_w, linfct = mcp(Treatment = "Tukey")))
cld_w<-cld(temp_glht_w)
cld_table_w_369<-as.data.frame(cld_w$mcletters$Letters, rownames=NULL)
cld_table_w_369<-setDT(cld_table_w_369, keep.rownames = TRUE)[]
cld_table_w_369$Month <- paste(i)
names(cld_table_w_369)[names(cld_table_w_369)=="rn"]<-"Treatment"
names(cld_table_w_369)[names(cld_table_w_369)=="cld$mcletters$Letters"]<-"Letters"
letters_table_w_369 <- cld_table_w_369[match(paste(temp_data$Treatment),
paste(cld_table_w_369$Treatment)),]
ylabelpos <- NULL
for (j in temp_data$Treatment) {
subsetis <- (temp_data[which(temp_data$Treatment==j),])
ylabelpos <- c(ylabelpos,max(subsetis$Length))
}
letters_table_w_369$ylabelpos <- ylabelpos*1.2
cld_table_length_369<-rbind(cld_table_length_369, letters_table_w_369)
}
## edit table
cld_table_length_369_unique<-(unique(cld_table_length_369)) %>%
rename(length_label_letter = `cld_w$mcletters$Letters`,
length_ylabelpos = ylabelpos) %>%
mutate(Months = gsub(" mph", "", Month))
## add cld to main df
length_weight_data_msdse_tukey <- length_weight_data_msdse %>%
left_join(., cld_table_length_369_unique, by = c("Months", "Treatment")) %>%
mutate(Months = factor(Months, levels=c("6", "9", "12"))) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT"))) %>%
# ## order = control, LT, FT, HT
mutate(length_ylabelpos2 = c(c(23, 21, 20, 22), c(29, 31, 30, 32), c(34, 35, 36, 37))) %>%
mutate(length_xlabelpos = c(rep(0.8, 4), rep(1.6, 4), rep(3.2, 4)))
## do length AND weight
## plot weight with tukey letters
line_length<-ggplot(length_weight_data_msdse_tukey,
aes(factor(Months), mean_len, colour=Treatment))+
geom_line(aes(group=Treatment))+
geom_point()+
scale_colour_manual(values=viridis_colours_darkyellow)+
geom_text(aes(length_xlabelpos, length_ylabelpos2,
label = length_label_letter),
fontface = "bold", size = 4,
show.legend = FALSE)+
geom_errorbar(aes(ymin=mean_len-se_len, ymax=mean_len+se_len, group=Treatment),
width=0.05)+
theme_bw()+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"),
strip.background = element_blank())+
ylab("Length (cm)") +
xlab("Time (mph)")
line_length
## save plot
ggsave("out/figure_line_length.jpeg", line_length, width=210*0.66, height=297*0.33, units="mm", device="jpeg")
## both
both<-ggpubr::ggarrange(line_length, line_weight, labels = c("A", "B"), common.legend = TRUE, legend = "bottom")
## save plot
ggsave("out/figure_line_both.jpeg", both, width=210*0.9, height=297*0.33, units="mm", device="jpeg")
both
## both
both<-ggpubr::ggarrange(line_length, line_weight, labels = c("A", "B"), common.legend = TRUE)
both
## both
both<-ggpubr::ggarrange(line_length, line_weight, labels = c("A", "B"), common.legend = TRUE, legend = "right")
both
## save plot
ggsave("out/figure_line_both.jpeg", both, width=210*0.9, height=297*0.33, units="mm", device="jpeg")
## save plot
ggsave("out/figure_line_both.pdf", both, width=210*0.9, height=297*0.33, units="mm", device="pdf")
## both
both<-ggpubr::ggarrange(line_length, line_weight, labels = c("A", "B"), common.legend = TRUE, legend = "bottom")
both
## save plot
ggsave("out/figure_line_both.pdf", both, width=210*0.9, height=297*0.33, units="mm", device="pdf")
## set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(multcomp)
library(data.table) ## setDT
library(viridis)
library(car)
library(tidyverse)
## IMPORT AND FORMAT DATA ----
## import data
length_weight_data_unmod <- read.csv("in/c3_length_weight_data_all.csv")
## format data
length_weight_data <- length_weight_data_unmod %>%
mutate(Treatment = gsub("F", "FT", Treatment) %>%
gsub("24", "LT", .) %>%
gsub("34", "HT", .) %>%
gsub("29", "Control", .)) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT")),
Months = as.factor(Months)) %>%
mutate(Month = paste0(Months, " mph")) %>%
mutate(Month = factor(Month, levels=c("12 mph", "9 mph", "6 mph")))
## WEIGHT STATS ----
## se function
se <- function(x) sqrt(var(x)/length(x))
## calculate mean SD/SE
length_weight_data_msdse = length_weight_data %>%
group_by(Months, Treatment) %>%
summarise(mean_len = mean(Length, na.rm=T),
sd_len = sd(Length, na.rm=T),
mean_wei = mean(Weight, na.rm=T),
sd_wei = sd(Weight, na.rm=T),
mean_len = mean(Length, na.rm=T),
se_len = se(Length),
mean_wei = mean(Weight, na.rm=T),
se_wei = se(Weight)) %>%
ungroup(.)%>%
# mutate(prev_mean_wei = c(1, 1, 1, 1, length_weight_data_msdse$mean_wei[1:8])) %>%
mutate(prev_mean_wei = c(0.01, 0.01, 0.01, 0.01, pull(., var=mean_wei)[1:8])) %>%
mutate(days = c(rep(180, 4), rep(90, 8))) %>%
mutate(SGR = (log(mean_wei) - log(prev_mean_wei))/days*100)
## make a nicely formatted supplementary table
## (did not end up using SGR)
w_supp_table <- length_weight_data_msdse %>%
mutate("Mean length (cm)" = round(mean_len, 2)) %>%
mutate("SD length" = round(sd_len, 2)) %>%
mutate("SE length" = round(se_len, 2)) %>%
mutate("Mean weight (g)" = round(mean_wei, 2)) %>%
mutate("SD weight" = round(sd_wei, 2)) %>%
mutate("SE weight" = round(se_wei, 2)) %>%
# mutate("SGR (%)" = round(SGR, 2)) %>%
select(-c("mean_len", "sd_len", "se_len",
"mean_wei", "sd_wei", "se_wei",
"prev_mean_wei", "SGR", "days"))
## export it
write.csv(w_supp_table, "out/c3_w_supp_table_both.csv", row.names = FALSE)
## run among treatment comparisons ----
## create empty df
cld_table_weight_369 <- NULL
## create tukey letters df
for (i in levels(length_weight_data$Month)) {
temp_data<-filter(length_weight_data, Month==i)
temp_name<-paste("Weight", i, "Months", sep="_")
print(temp_name)
temp_aov_w <- aov(Weight ~ Treatment, data = temp_data)
temp_glht_w<-(glht(temp_aov_w, linfct = mcp(Treatment = "Tukey")))
cld_w<-cld(temp_glht_w)
cld_table_w_369<-as.data.frame(cld_w$mcletters$Letters, rownames=NULL)
cld_table_w_369<-setDT(cld_table_w_369, keep.rownames = TRUE)[]
cld_table_w_369$Month <- paste(i)
names(cld_table_w_369)[names(cld_table_w_369)=="rn"]<-"Treatment"
names(cld_table_w_369)[names(cld_table_w_369)=="cld$mcletters$Letters"]<-"Letters"
letters_table_w_369 <- cld_table_w_369[match(paste(temp_data$Treatment),
paste(cld_table_w_369$Treatment)),]
ylabelpos <- NULL
for (j in temp_data$Treatment) {
subsetis <- (temp_data[which(temp_data$Treatment==j),])
ylabelpos <- c(ylabelpos,max(subsetis$Weight))
}
letters_table_w_369$ylabelpos <- ylabelpos*1.2
cld_table_weight_369<-rbind(cld_table_weight_369, letters_table_w_369)
}
## edit table
cld_table_weight_369_unique<-(unique(cld_table_weight_369)) %>%
rename(weight_label_letter = `cld_w$mcletters$Letters`,
weight_ylabelpos = ylabelpos) %>%
mutate(Months = gsub(" mph", "", Month))
## add cld to main df
length_weight_data_msdse_tukey <- length_weight_data_msdse %>%
left_join(., cld_table_weight_369_unique, by = c("Months", "Treatment")) %>%
mutate(Months = factor(Months, levels=c("6", "9", "12"))) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT"))) %>%
## order = control, LT, FT, HT
mutate(weight_ylabelpos2 = c(c(200, 133, 100, 166), c(433, 466, 400, 500), c(566, 600, 633, 666))) %>%
mutate(weight_xlabelpos = c(rep(0.8, 4), rep(1.6, 4), rep(3.2, 4)))
## CREATE PLOT ----
## edit viridis because yellow is hard to see
viridis_colours <- viridis(n = 4)
viridis_colours_darkyellow <- gsub("#FDE725FF", "darkgoldenrod2", viridis_colours)
viridis_colours_darkyellow
## plot weight with tukey letters
line_weight<-ggplot(length_weight_data_msdse_tukey,
aes(factor(Months), mean_wei, colour=Treatment))+
geom_line(aes(group=Treatment))+
geom_point()+
scale_colour_manual(values=viridis_colours_darkyellow)+
geom_text(aes(weight_xlabelpos, weight_ylabelpos2,
label = weight_label_letter),
fontface = "bold", size = 4,
show.legend = FALSE)+
geom_errorbar(aes(ymin=mean_wei-se_wei, ymax=mean_wei+se_wei, group=Treatment),
width=0.05)+
theme_bw()+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"),
strip.background = element_blank())+
ylab("Weight (g)") +
xlab("Time (mph)")
line_weight
## LENGTH STATS ----
## create empty df
cld_table_length_369 <- NULL
## create tukey letters df
for (i in levels(length_weight_data$Month)) {
temp_data<-filter(length_weight_data, Month==i)
temp_name<-paste("Length", i, "Months", sep="_")
print(temp_name)
temp_aov_w <- aov(Length ~ Treatment, data = temp_data)
temp_glht_w<-(glht(temp_aov_w, linfct = mcp(Treatment = "Tukey")))
cld_w<-cld(temp_glht_w)
cld_table_w_369<-as.data.frame(cld_w$mcletters$Letters, rownames=NULL)
cld_table_w_369<-setDT(cld_table_w_369, keep.rownames = TRUE)[]
cld_table_w_369$Month <- paste(i)
names(cld_table_w_369)[names(cld_table_w_369)=="rn"]<-"Treatment"
names(cld_table_w_369)[names(cld_table_w_369)=="cld$mcletters$Letters"]<-"Letters"
letters_table_w_369 <- cld_table_w_369[match(paste(temp_data$Treatment),
paste(cld_table_w_369$Treatment)),]
ylabelpos <- NULL
for (j in temp_data$Treatment) {
subsetis <- (temp_data[which(temp_data$Treatment==j),])
ylabelpos <- c(ylabelpos,max(subsetis$Length))
}
letters_table_w_369$ylabelpos <- ylabelpos*1.2
cld_table_length_369<-rbind(cld_table_length_369, letters_table_w_369)
}
## edit table
cld_table_length_369_unique<-(unique(cld_table_length_369)) %>%
rename(length_label_letter = `cld_w$mcletters$Letters`,
length_ylabelpos = ylabelpos) %>%
mutate(Months = gsub(" mph", "", Month))
## add cld to main df
length_weight_data_msdse_tukey <- length_weight_data_msdse %>%
left_join(., cld_table_length_369_unique, by = c("Months", "Treatment")) %>%
mutate(Months = factor(Months, levels=c("6", "9", "12"))) %>%
mutate(Treatment = factor(Treatment, levels=c("Control", "LT", "FT", "HT"))) %>%
# order = control, LT, FT, HT
mutate(length_ylabelpos2 = c(c(23, 21, 20, 22), c(29, 31, 30, 32), c(34, 35, 36, 37))) %>%
mutate(length_xlabelpos = c(rep(0.8, 4), rep(1.6, 4), rep(3.2, 4)))
## plot weight with tukey letters
line_length<-ggplot(length_weight_data_msdse_tukey,
aes(factor(Months), mean_len, colour=Treatment))+
geom_line(aes(group=Treatment))+
geom_point()+
scale_colour_manual(values=viridis_colours_darkyellow)+
geom_text(aes(length_xlabelpos, length_ylabelpos2,
label = length_label_letter),
fontface = "bold", size = 4,
show.legend = FALSE)+
geom_errorbar(aes(ymin=mean_len-se_len, ymax=mean_len+se_len, group=Treatment),
width=0.05)+
theme_bw()+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"),
strip.background = element_blank())+
ylab("Length (cm)") +
xlab("Time (mph)")
line_length
## both
both<-ggpubr::ggarrange(line_length, line_weight, labels = c("A", "B"), common.legend = TRUE, legend = "bottom")
both
## save plot
ggsave("out/figure_line_both.pdf", both, width=210*0.9, height=297*0.33, units="mm", device="pdf")
